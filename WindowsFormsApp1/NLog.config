<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Warn"
      internalLogFile="C:\Logs\AppLogs\nlog-internal-static.log">

  <extensions>
    <add assembly="Elastic.CommonSchema.NLog"/>
  </extensions>

  <targets async="true">
    <target name="app-log-file" xsi:type="AsyncWrapper" queueLimit="10000" overflowAction="Discard">
      <target xsi:type="File"
              fileName="C:\Logs\AppLogs\User-${windows-identity:domain=false}\${shortdate}.log"
              concurrentWrites="true"
              keepFileOpen="false"
              archiveAboveSize="10485760"
              archiveNumbering="Rolling"
              maxArchiveFiles="5">
        <layout xsi:type="ecs-layout" />
      </target>
    </target>
  </targets>

  <rules>
    <!-- 
    =========================================================================================
    == DIAGNOSTIC RULE RECIPE BOOK                                                         ==
    =========================================================================================

    INSTRUCTIONS:
    To troubleshoot a live issue, first read the "HOW TO CUSTOMIZE" guide below, then
    copy one of the XML recipes and paste it into the rules section at the "PASTE HERE"
    marker.

    IMPORTANT: Always paste diagnostic rules ABOVE the default rule. The `final="true"`
    attribute on these recipes is critical to prevent duplicate logs.


    ~~~ HOW TO CUSTOMIZE THE 'name' ATTRIBUTE ~~~
    The `name` attribute targets a specific part of your application.

      For VB6 Applications (AppName.exe.FileName.frm):
        - Target a specific VB6 form: name="LegacyApp.exe.frmOrders.frm.*"
        - Target the entire VB6 app:   name="LegacyApp.exe.*"

      For .NET Applications (Namespace.ClassName):
        - Target a specific .NET class:   name="MyCompany.Project.Services.PaymentService.*"
        - Target an entire .NET namespace: name="MyCompany.Project.Services.*"


    ~~~ RECIPE A: Trace a specific code location for ALL users ~~~
    Use this for broad debugging of a specific module or class. Customize the `name`
    attribute as explained above.

    <logger name="LegacyApp.exe.frmOrders.frm.*" minlevel="Trace" writeTo="app-log-file" final="true" />


    ~~~ RECIPE B: Trace a specific user in a specific code location ~~~
    Use this for a "surgical strike" to debug a problem for a single user. Customize
    the `name` attribute and change 'jdoe' to the target username.

    <logger name="LegacyApp.exe.frmOrders.frm.*" minlevel="Trace" writeTo="app-log-file" final="true">
      <filters>
        <when condition="equals('${windows-identity:domain=false}', 'jdoe', ignoreCase=true)" action="Log" />
      </filters>
    </logger>
    -->

    <!-- ===================================================================================== -->
    <!-- == <<<<< PASTE TEMPORARY DIAGNOSTIC RULES HERE, ABOVE THE DEFAULT RULE >>>>>         == -->
    <!-- ===================================================================================== -->


    <!-- ===================================================================================== -->
    <!-- == DEFAULT PRODUCTION RULE                                                         == -->
    <!-- ===================================================================================== -->
    <logger name="*" minlevel="Info" writeTo="app-log-file" />

  </rules>
</nlog>